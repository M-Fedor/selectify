import argparse


DEFAULT_CACHE_SIZE = 512
DEFAULT_THROTTLE = 0.4
DEFAULT_SPLIT_READ_INTERVAL = 0.4


def parse_arguments() -> argparse.Namespace:
    parser = argparse.ArgumentParser()

    parser.add_argument(
        '--fast5-reads',
        type=str,
        help='Directory containing .fast5 files'
    )
    parser.add_argument(
        '--sorted-reads',
        type=str,
        help='Directory containig reads preprocessed by read_indexer.py'
    )
    parser.add_argument(
        '--sequencing-output',
        type=str,
        help='Output file for sequencing emulation output'
    )
    parser.add_argument(
        '--cache-size',
        type=int,
        help='The size of the read cache in the ReadUntilClient',
        default=DEFAULT_CACHE_SIZE
    )
    parser.add_argument(
        '--split-read-interval',
        type=float,
        help='Time duration after which an updated information about current read is provided by ReadUntilSimulator',
        default=DEFAULT_SPLIT_READ_INTERVAL
    )
    parser.add_argument(
        '--throttle',
        type=float,
        help='Time interval, in seconds, between requests to the ReadUntilClient',
        default=DEFAULT_THROTTLE
    )
    parser.add_argument(
        '--chunk-length',
        type=int,
        help='The signal chunk length compatible with the CNN model input',
    )
    parser.add_argument(
        '--model',
        type=str,
        help='Stored model file generated by Tensorflow'
    )
    parser.add_argument(
        '--verbose',
        action='store_true',
        default=False
    )

    args = parser.parse_args()

    if any([arg is None for arg in vars(args)]):
        print('Incomplete inputs specified, nothing to do.')
        return None

    return args
